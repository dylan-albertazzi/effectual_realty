[{"/Users/dylanalbertazzi/Desktop/effectual_realty/src/index.js":"1","/Users/dylanalbertazzi/Desktop/effectual_realty/src/reportWebVitals.js":"2","/Users/dylanalbertazzi/Desktop/effectual_realty/src/App.js":"3","/Users/dylanalbertazzi/Desktop/effectual_realty/src/aws-exports.js":"4","/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/HomePage.js":"5","/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/AppNavbar.js":"6","/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/ManageListingPage.js":"7"},{"size":649,"mtime":1610218665596,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610211281624,"results":"10","hashOfConfig":"9"},{"size":1169,"mtime":1610221781180,"results":"11","hashOfConfig":"9"},{"size":734,"mtime":1610306169014,"results":"12","hashOfConfig":"9"},{"size":1844,"mtime":1610214278969,"results":"13","hashOfConfig":"9"},{"size":1222,"mtime":1610218963648,"results":"14","hashOfConfig":"9"},{"size":8336,"mtime":1610244909921,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1vgpxlb",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/dylanalbertazzi/Desktop/effectual_realty/src/index.js",[],["34","35"],"/Users/dylanalbertazzi/Desktop/effectual_realty/src/reportWebVitals.js",[],"/Users/dylanalbertazzi/Desktop/effectual_realty/src/App.js",["36","37","38","39"],"import logo from './logo.svg';\nimport './App.css';\n\nimport React from \"react\";\nimport Amplify from \"aws-amplify\";\nimport { AmplifyAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport ManageListingPage from \"./components/ManageListingPage\"\n\nfunction App() {\n  return (\n     <Router>\n        <div>\n          <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n         \n            <Route path=\"/manage-listing\" exact component={ManageListingPage} />\n         \n           \n          </Switch>\n        </div>\n      </Router>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","/Users/dylanalbertazzi/Desktop/effectual_realty/src/aws-exports.js",[],"/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/HomePage.js",["40","41","42","43","44","45","46","47","48","49"],"import React, { useEffect } from \"react\";\nimport Amplify, { API } from \"aws-amplify\";\nimport { Container, Row, Col, Jumbotron, Button } from \"reactstrap\";\n\n// import \"animate.css/animate.css\";\n\n\nimport { Link } from \"react-router-dom\";\nimport AppNavbar from \"./AppNavbar\";\n\n\n\nexport default function HomePage() {\n  const apiName = \"submitForm\";\n  const path = \"/submit\";\n  const myInit = {\n    // OPTIONAL\n    headers: {}, // OPTIONAL\n    response: true, // OPTIONAL (return the entire Axios response object instead of only response.data)\n    queryStringParameters: {\n      // OPTIONAL\n      name: \"param\",\n    },\n  };\n//   useEffect(() => {\n//     console.log(\"made it to insert survey monkey\")\n//   const script = document.createElement('script');\n\n//   script.src = \"https://widget.surveymonkey.com/collect/website/js/tRaiETqnLgj758hTBazgd9myoxaykD4Nric6MRtsFnioEt14hFYoTMcoGgbOon83.js\";\n//   script.async = true;\n\n//   document.body.appendChild(script);\n\n//   return () => {\n//     document.body.removeChild(script);\n//      console.log(\"Inserted survey monkey\")\n//   }\n// }, []);\n \n\n  return (\n    <>\n      <div className=\"bg-gray\">\n        <div className=\"jumbotron-home\">\n          <div className=\"home-intro-bg\"></div>\n          <Container className=\"home-intro\" fluid>\n            <AppNavbar initialOpen={false} />\n            <Jumbotron className=\"bg-transparent mb-0 pt-2 pb-0\">\n              {/* <h1 className=\"jumbotron-txt\">\n                Coming to Bend?\n                <br />\n                Eat Local!\n              </h1> */}\n              <h1 className=\"jumbotron-txt\">\n                Get a superb restaurant recommendation\n                <br />\n                in 2 minutes!\n              </h1>\n            </Jumbotron>\n            \n          </Container>\n              </div>\n              </div>\n       \n    </>\n  );\n}\n","/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/AppNavbar.js",[],"/Users/dylanalbertazzi/Desktop/effectual_realty/src/components/ManageListingPage.js",["50","51","52","53","54","55","56","57"],"import React, { useEffect, useState } from \"react\";\nimport Amplify, { API } from \"aws-amplify\";\nimport { Form, Field } from \"@leveluptuts/fresh\";\n\nimport { Container, Row, Col, Jumbotron, Button, Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Modal, ModalHeader, ModalBody, ModalFooter, FormGroup,Label,Input } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AppNavbar from \"./AppNavbar\";\n\nimport { DataStore } from '@aws-amplify/datastore';\nimport { Home } from '../models';\n\nexport default function ManageListingPage() {\n  \n    const [listing, setListing] = useState([]);\n    \n    useEffect(() => {\n        const func = async () => {\n            const listings = await DataStore.query(Home)\n            console.log(\"before listings\")\n            console.log(listings)\n            console.log(\"after listings\")\n            setListing(listings)\n        }\n        \n\n        func()\n    }, [])\n\n    const [addListingModal, setaddListingModal] = useState(false);\n\n    const toggle = () => setaddListingModal(!addListingModal);\n\n    const createListing = async (data) => {\n        // const listing = {\n        //     title\n        // }\n        console.log(\"Creating Listing\")\n        \n        console.log(\"Create Listing data\", data)\n        console.log(\"Street1\", data.street1)\n        console.log(\"zipCode\", data.zipCode)\n        console.log(\"typeof\", typeof(data.zipCode))\n\n        const newListing = await DataStore.save(\n            new Home({\n                \"MLS\": \"a3f4095e-39de-43d2-baf4-f8c16f0f6f4d\",\n                \"Street1\": data.street1,\n                \"Street2\": data.street2,\n                \"City\": data.city,\n                \"State\": data.state,\n                \"ZipCode\": data.zipCode,\n                \"Neighborhood\": data.neighborhood,\n                \"SalesPrice\": data.salesPrice,\n                \"DateListed\": data.dateListed,\n                \"Bedrooms\": data.bedrooms,\n                \"Photos\": data.photos,\n                \"Bathrooms\": data.bathrooms,\n                \"GarageSize\": data.garageSize,\n                \"SquareFeet\": data.squareFeet,\n                \"LotSize\": data.lotSize,\n                \"Description\": data.description\n            })\n        \n        );\n        console.log(\"After saveListing\", newListing)\n        toggle()\n    }\n    const securityQuestions = [\n        \"What is your mother's maiden name?\",\n        \"What was the name of your first pet?\",\n        \"What was the name of your first school?\"\n      ];\n      \n    const onSubmit = (data) => {\n        console.log(\"==data\",data);\n        createListing(data)\n    }\n\n    const previousValues = {\n        name: 'Brooklyn Boo',\n        email: 'scott@test.com',\n      }\n \n\n  return (\n    <>\n      <div className=\"bg-gray\">\n        <div className=\"jumbotron-home\">\n          <div className=\"home-intro-bg\"></div>\n          <Container className=\"home-intro\" fluid>\n            <AppNavbar initialOpen={false} />\n            <Jumbotron className=\"bg-transparent mb-0 pt-2 pb-0\">\n\n              <h1 className=\"jumbotron-txt\">\n                Manage Listings Here!\n                \n              </h1>\n            </Jumbotron>\n            \n          </Container>\n              </div>\n              <Container>\n                  <Row>\n                      <Col>\n                          <Button onClick={toggle}>\n                              Add Listing\n                        </Button>\n                      </Col>\n                  </Row>\n              </Container>\n                 <Container>\n                  <Row>\n                      <Col>\n                          {listing.map(listing => \n                            \n                            \n                                  \n                              <Card className=\"shadow\">\n                            {listing.hasOwnProperty(\"Photos\") ? (\n                                <CardImg\n                                top\n                                width=\"100%\"\n                                // src={}\n                                alt=\"Photo not added yet\"\n                                className=\"response-img\"\n                                />\n                                                ) : (\n                                                        <p>No Image Added</p>\n                                // <CardImg\n                                //   top\n                                //   width=\"100%\"\n                                //   src={require(\"../../images/river-placeholder.png\")}\n                                //   alt=\"Card image cap\"\n                                //   className=\"response-img\"\n                                // />\n                            )}\n\n                            <CardBody>\n                                <CardTitle className=\"text-center mb-1\">\n                                \n                                    <h2 className=\"font-weight-bold mb-0\">\n                                    $ {listing.SalesPrice}\n                                          </h2>\n                                          <h3>{listing.Bedrooms} bed | {listing.Bathrooms} ba | {listing.SquareFeet} sq.ft</h3>\n                                \n                                </CardTitle>\n                                      <CardSubtitle className=\"text-center\">{listing.Street1} \n                                          {listing.hasOwnProperty(\"Street2\") ? (listing.Street2) : null}</CardSubtitle>\n                                      <CardSubtitle className=\"text-center\">Date Listed: {listing.DateListed} GarageSize: {listing.GarageSize} sq.ft</CardSubtitle>\n                                      <CardSubtitle className=\"text-center\">Lot Size: {listing.hasOwnProperty(\"LotSize\") ? ( listing.LotSize ) : null} sq.ft Neighborhood: {listing.hasOwnProperty(\"Neighborhood\") ? (listing.Neighborhood ) : null}</CardSubtitle>\n                                      <CardText>\n                                          Description: <br/>\n                                          {listing.hasOwnProperty(\"Description\") ? (listing.Description) : null}\n                                      </CardText>\n                                      <CardSubtitle className=\"text-center\">\n                                            {listing.MLS}\n                                      </CardSubtitle >\n                                      <Button className=\"text-center\"> Edit Listing </Button>\n                                      \n                            </CardBody>\n                            </Card>\n                          )}\n                          \n\n                      </Col>\n                  </Row>\n              </Container>\n          </div>\n          \n        <Modal isOpen={addListingModal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Enter Details For Your Listing Here</ModalHeader>\n            <ModalBody>\n            <Form formId=\"user-profile\" onSubmit={onSubmit}>\n                <Field placeholder=\"64576 Sylvan Loop\" required>Street1</Field>\n                <Field placeholder=\"Apt. 42\" >Street2</Field>\n                <Field placeholder=\"Bend\" required>City</Field>\n                <Field placeholder=\"OR\" required>State</Field>\n                <Field placeholder=\"97701\" type=\"number\" required>Zip Code</Field>\n                <Field placeholder=\"NW Crossing\">Neighborhood</Field>\n                <Field placeholder=\"351000\" type=\"number\" required>Sales Price</Field>\n                <Field placeholder=\"3\" type=\"number\" required>Bedrooms</Field>\n                <Field placeholder=\"4\" type=\"number\" required>Bathrooms</Field>\n                {/* <Field type=\"file\" >Photos</Field> */}\n                <Field placeholder=\"mm/dd/yyyy\" type=\"date\" required>Date Listed</Field>\n                <Field placeholder=\"300\" type=\"number\" name=\"garageSize\" >Garage Size (sq.ft)</Field>\n                <Field placeholder=\"2450\" type=\"number\" name=\"squareFeet\" required>Square Feet (sq.ft)</Field>\n                <Field placeholder=\"10000\" type=\"number\" name=\"lotSize\" >Lot Size (sq.ft)</Field>\n                <Field placeholder=\"A lovely Bend house.\" required>Description</Field>\n            </Form>\n                        \n            </ModalBody>\n            <ModalFooter>\n                \n            </ModalFooter>\n        </Modal>\n       \n    </>\n  );\n}\n\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":30},{"ruleId":"62","severity":1,"message":"68","line":6,"column":32,"nodeType":"64","messageId":"65","endLine":6,"endColumn":46},{"ruleId":"62","severity":1,"message":"69","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":15},{"ruleId":"62","severity":1,"message":"70","line":2,"column":19,"nodeType":"64","messageId":"65","endLine":2,"endColumn":22},{"ruleId":"62","severity":1,"message":"71","line":3,"column":21,"nodeType":"64","messageId":"65","endLine":3,"endColumn":24},{"ruleId":"62","severity":1,"message":"72","line":3,"column":26,"nodeType":"64","messageId":"65","endLine":3,"endColumn":29},{"ruleId":"62","severity":1,"message":"73","line":3,"column":42,"nodeType":"64","messageId":"65","endLine":3,"endColumn":48},{"ruleId":"62","severity":1,"message":"74","line":8,"column":10,"nodeType":"64","messageId":"65","endLine":8,"endColumn":14},{"ruleId":"62","severity":1,"message":"75","line":14,"column":9,"nodeType":"64","messageId":"65","endLine":14,"endColumn":16},{"ruleId":"62","severity":1,"message":"76","line":15,"column":9,"nodeType":"64","messageId":"65","endLine":15,"endColumn":13},{"ruleId":"62","severity":1,"message":"77","line":16,"column":9,"nodeType":"64","messageId":"65","endLine":16,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":15},{"ruleId":"62","severity":1,"message":"70","line":2,"column":19,"nodeType":"64","messageId":"65","endLine":2,"endColumn":22},{"ruleId":"62","severity":1,"message":"78","line":5,"column":154,"nodeType":"64","messageId":"65","endLine":5,"endColumn":163},{"ruleId":"62","severity":1,"message":"79","line":5,"column":164,"nodeType":"64","messageId":"65","endLine":5,"endColumn":169},{"ruleId":"62","severity":1,"message":"80","line":5,"column":170,"nodeType":"64","messageId":"65","endLine":5,"endColumn":175},{"ruleId":"62","severity":1,"message":"74","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":14},{"ruleId":"62","severity":1,"message":"81","line":68,"column":11,"nodeType":"64","messageId":"65","endLine":68,"endColumn":28},{"ruleId":"62","severity":1,"message":"82","line":79,"column":11,"nodeType":"64","messageId":"65","endLine":79,"endColumn":25},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Amplify' is defined but never used.","'AmplifyAuthenticator' is defined but never used.","'AmplifySignOut' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'apiName' is assigned a value but never used.","'path' is assigned a value but never used.","'myInit' is assigned a value but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'securityQuestions' is assigned a value but never used.","'previousValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]